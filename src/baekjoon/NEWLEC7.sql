--조인 join
--데이터의 무결성

SELECT * FROM MEMBER_NEWLEC mn ;
SELECT * FROM NOTICE_NEWLEC nn ;

SELECT 
	* 
FROM MEMBER_NEWLEC MN 
INNER JOIN NOTICE_NEWLEC NN
ON MN.ID = NN.WRITER_ID ;
-- OUTER JOIN
-- INNER JOIN은 관계 있는 것들을 조인, 관계없는 것들을 조인시키는 OUTER JOIN
SELECT * FROM NOTICE_NEWLEC N JOIN MEMBER_NEWLEC M ON N.WRITER_ID =M.ID ;
SELECT * FROM NOTICE_NEWLEC N LEFT OUTER JOIN MEMBER_NEWLEC M ON N.WRITER_ID =M.ID ;
SELECT * FROM NOTICE_NEWLEC N RIGHT OUTER JOIN MEMBER_NEWLEC M ON N.WRITER_ID =M.ID ;
SELECT * FROM NOTICE_NEWLEC N FULL OUTER JOIN MEMBER_NEWLEC M ON N.WRITER_ID =M.ID ;


-- SELF JOIN

SELECT * FROM MEMBER_NEWLEC ;
SELECT M.*, B.NAME BOSS_NAME FROM MEMBER_NEWLEC M 
	LEFT OUTER JOIN MEMBER_NEWLEC B ON B.ID=M.BOSS_ID;

-- ORACLE JOIN
SELECT N.ID, N.TITLE, M.NAME
FROM MEMBER_NEWLEC M, NOTICE_NEWLEC N
WHERE M.ID = N.WRITER_ID AND M.ID = 'newlec';

SELECT N.*, M.NAME WRITER_NAME
FROM NOTICE_NEWLEC N, MEMBER_NEWLEC M
WHERE N.WRITER_ID =M.ID (+);

-- UNION
SELECT TO_CHAR(ID), TO_CHAR(NAME) FROM MEMBER_NEWLEC
INTERSECT 
SELECT TO_CHAR(WRITER_ID), TO_CHAR(TITLE) FROM NOTICE_NEWLEC;

SELECT ID, NAME FROM MEMBER_NEWLEC WHERE ID LIKE '%n%'
UNION ALL
SELECT ID, NAME FROM MEMBER_NEWLEC WHERE ID LIKE '%g%';



